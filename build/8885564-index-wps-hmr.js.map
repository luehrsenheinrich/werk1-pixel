{"version":3,"sources":["webpack:///./src/index.js"],"names":["Renderer","registerPlugin","BatchRenderer","Application","TickerPlugin","options","selectorClassName","pixelSize","overflow","vAlign","hAlign","window","addEventListener","event","elements","document","getElementsByClassName","Array","from","forEach","element","app","resizeTo","appendChild","view","container","Container","stage","addChild","xAmt","renderer","width","yAmt","height","Math","ceil","floor","y","x","graphics","W1Pixel"],"mappings":"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","file":"8885564-index-wps-hmr.js","sourcesContent":["// Import external dependencies.\nimport { Application } from '@pixi/app';\nimport { Container } from '@pixi/display';\nimport { Renderer, BatchRenderer } from '@pixi/core';\nRenderer.registerPlugin( 'batch', BatchRenderer );\n\nimport { TickerPlugin } from '@pixi/ticker';\nApplication.registerPlugin(TickerPlugin);\n\n// Import internal dependencies.\nimport W1Pixel from './inc/pixel'\n\n// Parse or setup some options.\n// This should ideally be externalised and be modified by a window object.\nconst options = {\n\tselectorClassName: 'w1-pixel-stage',\n\tpixelSize: 100, // The default size of one pixel.\n\toverflow: false, // If we want to draw pixel over the edge of the stage.\n\tvAlign: 'center', // top, center, bottom\n\thAlign: 'center', // left, center, right\n}\n\n// Stuff we want to do on load.\nwindow.addEventListener( 'load', function( event ) {\n\tconst elements = document.getElementsByClassName( options.selectorClassName );\n\tArray.from( elements ).forEach( ( element ) => {\n\t\t// Generate the PIXI app and add it to the DOMElement.\n\t\tconst app = new Application( {\n\t\t\tresizeTo: element\n\t\t}Â );\n\t\telement.appendChild( app.view );\n\n\t\t// Generate a pixi container to draw in.\n\t\tconst container = new Container();\n\t\tapp.stage.addChild(container);\n\n\t\t// how many pixel can we stuff on the x axis?\n\t\tlet xAmt =  app.renderer.view.width / options.pixelSize;\n\t\tlet yAmt =  app.renderer.view.height / options.pixelSize;\n\n\t\t// Floor or ceil the amounts depending on if we want overflow or not.\n\t\tif( options.overflow ) {\n\t\t\txAmt = Math.ceil( xAmt );\n\t\t\tyAmt = Math.ceil( yAmt );\n\t\t} else {\n\t\t\txAmt = Math.floor( xAmt );\n\t\t\tyAmt = Math.floor( yAmt );\n\t\t}\n\n\t\t// Draw the pixel and add it to the container.\n\t\tfor(let y = 0; y < yAmt; y++) {\n\t\t\tfor(let x = 0; x<xAmt; x++) {\n\t\t\t\tconst graphics = new W1Pixel(x * options.pixelSize, y * options.pixelSize, options.pixelSize);\n\t\t\t\tcontainer.addChild(graphics);\n\t\t\t}\n\t\t}\n\n\t\t// Calculate and modify the vertial alignment\n\t\tif ( options.vAlign === 'center' ) {\n\t\t\tcontainer.y = (app.renderer.view.height - container.height) / 2;\n\t\t} else if ( options.vAlign === 'bottom' ) {\n\t\t\tcontainer.y = (app.renderer.view.height - container.height);\n\t\t}\n\n\t\t// Calculate and modify the horizontal alignment\n\t\tif ( options.hAlign === 'center' ) {\n\t\t\tcontainer.x = (app.renderer.view.width - container.width) / 2;\n\t\t} else if ( options.hAlign === 'right' ) {\n\t\t\tcontainer.x = (app.renderer.view.width - container.width);\n\t\t}\n\t} );\n});\n"],"sourceRoot":""}