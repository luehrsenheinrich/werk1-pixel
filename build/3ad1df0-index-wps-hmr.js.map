{"version":3,"sources":["webpack:///./src/index.js"],"names":["Renderer","registerPlugin","BatchRenderer","Application","TickerPlugin","options","selectorClassName","window","addEventListener","event","elements","document","getElementsByClassName","Array","from","forEach","element","app","appendChild","view","container","Container","stage","addChild","graphics","Graphics","beginFill","drawRect","console","log"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACAA,mDAAQ,CAACC,cAAT,CAAyB,OAAzB,EAAkCC,wDAAlC;AAEA;AACAC,qDAAW,CAACF,cAAZ,CAA2BG,yDAA3B,E,CAEA;AACA;;AACA,IAAMC,OAAO,GAAG;AACfC,mBAAiB,EAAE;AADJ,CAAhB,C,CAIA;;AACAC,MAAM,CAACC,gBAAP,CAAyB,MAAzB,EAAiC,UAAUC,KAAV,EAAkB;AAClD,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,sBAAT,CAAiCP,OAAO,CAACC,iBAAzC,CAAjB;AACAO,OAAK,CAACC,IAAN,CAAYJ,QAAZ,EAAuBK,OAAvB,CAAgC,UAAEC,OAAF,EAAe;AAC9C;AACA,QAAMC,GAAG,GAAG,IAAId,qDAAJ,EAAZ;AACAa,WAAO,CAACE,WAAR,CAAqBD,GAAG,CAACE,IAAzB,EAH8C,CAK9C;;AACA,QAAMC,SAAS,GAAG,IAAIC,uDAAJ,EAAlB;AACAJ,OAAG,CAACK,KAAJ,CAAUC,QAAV,CAAmBH,SAAnB;AAEA,QAAMI,QAAQ,GAAG,IAAIC,uDAAJ,EAAjB;AAEAD,YAAQ,CAACE,SAAT,CAAmB,QAAnB;AACAF,YAAQ,CAACG,QAAT,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,GAAxB,EAA6B,GAA7B;AACAP,aAAS,CAACG,QAAV,CAAmBC,QAAnB;AAGAI,WAAO,CAACC,GAAR,CAAab,OAAb;AACA,GAjBD;AAkBA,CApBD,E","file":"3ad1df0-index-wps-hmr.js","sourcesContent":["// Import external dependencies.\nimport { Application } from '@pixi/app';\nimport { Container } from '@pixi/display';\nimport { Graphics } from '@pixi/graphics';\nimport { Renderer, BatchRenderer } from '@pixi/core';\nRenderer.registerPlugin( 'batch', BatchRenderer );\n\nimport { TickerPlugin } from '@pixi/ticker';\nApplication.registerPlugin(TickerPlugin);\n\n// Parse or setup some options.\n// This should ideally be externalised and be modified by a window object.\nconst options = {\n\tselectorClassName: 'w1-pixel-stage',\n}\n\n// Stuff we want to do on load.\nwindow.addEventListener( 'load', function( event ) {\n\tconst elements = document.getElementsByClassName( options.selectorClassName );\n\tArray.from( elements ).forEach( ( element ) => {\n\t\t// Generate the PIXI app and add it to the DOMElement.\n\t\tconst app = new Application();\n\t\telement.appendChild( app.view );\n\n\t\t// Generate a pixi container to draw in.\n\t\tconst container = new Container();\n\t\tapp.stage.addChild(container);\n\n\t\tconst graphics = new Graphics();\n\n\t\tgraphics.beginFill(0xFFFF00);\n\t\tgraphics.drawRect(0, 0, 100, 100);\n\t\tcontainer.addChild(graphics);\n\n\n\t\tconsole.log( element );\n\t} );\n});\n"],"sourceRoot":""}